swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Account Management Service"
  contact:
    email: "oussama.hedoui.de@gmail.com"
  
host: "localhost"
basePath: "/"
schemes:
- "https"
- "http"
paths:
  /bank_account:
    post:
      tags:
      - "banking"
      summary: "create a bank account"
      operationId: "addBankAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/BankAccount"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Success creating a bank account."
          schema:
              $ref: '#/definitions/ApiResponse'
    put:
      tags:
      - "banking"
      summary: "Update an existing account"
      operationId: "update"
      consumes:
      - "application/json"
      produces:
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/BankAccount"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Bank not found"
        "405":
          description: "Validation exception"
 
  /bank_account/{accountNumber}:
    get:
      tags:
      - "banking"
      summary: "Find BankAccount by account number"
      operationId: "getBankByAccountNumber"
      produces:
      - "application/json"
      parameters:
      - name: "accountNumber"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/BankAccount"
        "400":
          description: "Invalid account number supplied"
        "404":
          description: "Bank not found"
    delete:
      tags:
      - "banking"
      summary: "Deletes a BankAccount"
      description: ""
      operationId: "deleteBankAccount"
      produces:
      - "application/json"
      parameters:
      - name: "accountNumber"
        in: "path"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid account number supplied"
        "404":
          description: "Bank not found"
  /transaction:
    post:
      tags:
      - "transactions"
      summary: "make a transaction between accounts"
      operationId: "makeTransaction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Transaction"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Success creating a bank account."
          schema:
              $ref: '#/definitions/ApiResponse'

    get:
      tags:
      - "transactions"
      summary: "Find transactions between two dates"
      operationId: "getTransactions"
      produces:
      - "application/json"
      parameters:
      - name: "start"
        in: "query"
        description: "the start date from where to start the search"
        required: false
        type: "string"
      - name: "end"
        description: "the end date of the search"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
        "400":
          description: "Invalid date supplied"
        "404":
          description: "No Transaction found"
definitions:
  BankAccount:
    type: "object"
    required:
    - "holder_name"
    - "account_number"
    - "bank_name"
    - "bank_location"
    - "code"
    - "currency"
    - "created_at"
    properties:
      holder_name:
        type: "string"
      account_number:
        type: "string"
      bank_name:
        type: "string"
      bank_location:
        type: "string"
      code:
        type: "integer"
        format: "int64"
      currency:
        type: "string"
        enum: [EUR, USD]
      created_at:
        type: "string"
      
  Transaction:
    type: "object"
    required:
    - "date"
    - "amount_of_transaction"
    - "creditor_account_number"
    - "debtor_account_number"
    - "currency"
    properties:
      date:
        type: "string"
      amount_of_transaction:
        type: "string"
      other_details:
        type: "string"
      creditor_account_number:
        type: "string"
      debtor_account_number:
        type: "string"
      currency:
        type: "string"
        enum: [EUR, USD]
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"