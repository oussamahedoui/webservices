/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.19).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.techtest.mobilab.services.api;

import com.techtest.mobilab.services.model.BankAccount;
import com.techtest.mobilab.services.model.ModelApiResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2021-04-06T09:18:58.057Z")

@Validated
@Api(value = "bank_account", description = "the bank_account API")
@RequestMapping(value = "")
public interface BankAccountApi {

	@CrossOrigin("*")
	@ApiOperation(value = "create a bank account", nickname = "addBankAccount", notes = "", response = ModelApiResponse.class, tags = {
			"banking", })
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "Success creating a bank account.", response = ModelApiResponse.class),
			@ApiResponse(code = 405, message = "Invalid input") })
	@RequestMapping(value = "/bank_account", produces = { "application/json" }, consumes = {
			"application/json" }, method = RequestMethod.POST)
	ResponseEntity<ModelApiResponse> addBankAccount(
			@ApiParam(value = "", required = true) @Valid @RequestBody BankAccount body);

	@CrossOrigin("*")
	@ApiOperation(value = "Deletes a BankAccount", nickname = "deleteBankAccount", notes = "", tags = { "banking", })
	@ApiResponses(value = { @ApiResponse(code = 400, message = "Invalid account number supplied"),
			@ApiResponse(code = 404, message = "Bank not found") })
	@RequestMapping(value = "/bank_account/{accountNumber}", produces = {
			"application/json" }, method = RequestMethod.DELETE)
	ResponseEntity<ModelApiResponse> deleteBankAccount(
			@ApiParam(value = "", required = true) @PathVariable("accountNumber") String accountNumber);

	@CrossOrigin("*")
	@ApiOperation(value = "Find BankAccount by account number", nickname = "getBankByAccountNumber", notes = "", response = BankAccount.class, tags = {
			"banking", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "successful operation", response = BankAccount.class),
			@ApiResponse(code = 400, message = "Invalid account number supplied"),
			@ApiResponse(code = 404, message = "Bank not found") })
	@RequestMapping(value = "/bank_account/{accountNumber}", produces = {
			"application/json" }, method = RequestMethod.GET)
	ResponseEntity<BankAccount> getBankByAccountNumber(
			@ApiParam(value = "", required = true) @PathVariable("accountNumber") String accountNumber);

	@CrossOrigin("*")
	@ApiOperation(value = "Update an existing account", nickname = "updatePet", notes = "", tags = { "banking", })
	@ApiResponses(value = { @ApiResponse(code = 400, message = "Invalid ID supplied"),
			@ApiResponse(code = 404, message = "Bank not found"),
			@ApiResponse(code = 405, message = "Validation exception") })
	@RequestMapping(value = "/bank_account", produces = { "application/json" }, consumes = {
			"application/json" }, method = RequestMethod.PUT)
	ResponseEntity<ModelApiResponse> update(@ApiParam(value = "", required = true) @Valid @RequestBody BankAccount body);

}
